[{"categories":["Academia"],"content":"Experience of being a TA","date":"2022-11-14","objectID":"/posts/ta/ta/","tags":["computer science"],"title":"My Experience of being a Teaching Assistant in School of Computing :thinking:","uri":"/posts/ta/ta/"},{"categories":["Academia"],"content":"Last week, I finished conducting my last tutorial session and makring last set of homework as A Teaching Assitant in School of Computing. I want to write this post to share my experienceof being a Teaching Assitant and how did I got an offer from SOC. ","date":"2022-11-14","objectID":"/posts/ta/ta/:0:0","tags":["computer science"],"title":"My Experience of being a Teaching Assistant in School of Computing :thinking:","uri":"/posts/ta/ta/"},{"categories":["Academia"],"content":"The Module I Taught CS1101S Programming Methodology CS1101S\rThis module introduces the concepts of programming and computational problem solving, and is the first and foremost introductory module to computing.\r","date":"2022-11-14","objectID":"/posts/ta/ta/:0:1","tags":["computer science"],"title":"My Experience of being a Teaching Assistant in School of Computing :thinking:","uri":"/posts/ta/ta/"},{"categories":["Academia"],"content":"How Did I Even Get the Position Background Since CS1101S is essentially the first module that every Computer Science Student are supposed to take, except for those who have been exempted from this module, we have a really large cohort size, apporximately 700 student every year. Also, the professors of CS1101S believe that the size of the class should be kept small, less than or equals to eight students per class, for better class engagement. Therefore, they are also recruiting a large number of Teaching Assistants every year. Unlikely most other modules, where we have to apply via the SOC Manpower System or explicitly sending emails to the professor, CS1101s professors will open an portal to recruit Teaching Assistants. Application Procedure The portal will normally be open around November and December. Apart from basic information, like personal particulars, they will ask you to write about what characteristics a good teaching assistant should possess and what personal qualities you possess that could make you a good teaching assistant in the future. After the application, the professors will arrange an interview sesson in the subsequent sememster, if they are satified with the portfolio. The Interview The interview can happen anytime from January to Apirl in the second sememster and the style of the interview is quite formal. The professor essentially wants to test whether I was able to express myself clearly and whether I know the concept of CS1101S thoroughly. The profess would pretend to be a confusing student and ask you to explain certain concepts, like recursion, environment model, time complexity and etc. Unexpected Questions\rthe professor may ask very unexpected question, not difficult questions but some conceptual ones that people tend to neglect. The first question he asked me is the difference between a statment and an expression. 😧\rThe interview usually take place for half an hour and I heard that the passing rate is also very high. Don’t worry if you didn’t get an A for this module, it is perfectly possible to get an offer as Teaching Assistant with an A- grade. ","date":"2022-11-14","objectID":"/posts/ta/ta/:0:2","tags":["computer science"],"title":"My Experience of being a Teaching Assistant in School of Computing :thinking:","uri":"/posts/ta/ta/"},{"categories":["Academia"],"content":"Workload? 🤔 I would said it varies large from person to person. I depends on how familiar your are with the content of the module and what style you want the tutorial to be. The workload maingly consists of three parts: conducting lessons, preparing lessons, and grading homework. conducting lessons: There is a 2-hour tutorial every week. I would first conduct a lecture recap for aroudn 20-30 minutes then let the students discuss their homework among themselve. Afterwards, I will release a in-class worksheet to let them try on the spot for another 20 minutes and explained the results for the remaining time. Personally, I feel that the workload of conducting lessons was actually quite manageable among others. Additionally, I conducted the lessons in such a way, where I will be explaining most of the stuff. I know some of the TA prefer to let the students themselves to speak more. preparing lessons: the workload of preparing lessons are surprisingly high. Although I took the module only one year ago and I have learnt much throughout the year, it is only when I start to be TA that I realized that being able to teach others requires a much higher level understanding of the knowledge. Luckily, I have a small group of 4 friends, who become TAs together with me this sememster. We met every Friday to plan out our lessons, discuss the concepts that we, ourselves, were not sure about, and make the slides for next weeks’s lesson. We did not make the slides from scratch as the workload is going to be insane. We most adapted from our TA’s slides of the previous batch, and adjusted them to fit the modification of new syllabus grading homework: This is where a lot of patience is needed. We have multiply coding homework to grade every week on a platform for this module, called Source Academy. Since this is introductory module for CS, many students have little to no knowledge to programming. The approach and styling of their homework can be very very messy and most of them don’t have a habit of commenting their code. 😕 It gave me a headache reading their code and trying to guess what they are supposed to do in the first few weeks. It did get much better in the second half of the semester where students are much familar with coding and computer science in general. To summarize, personally, I do feel that the workload of being a Teaching Assistant for this module is comparable to taking a hardcore module myself. ","date":"2022-11-14","objectID":"/posts/ta/ta/:0:3","tags":["computer science"],"title":"My Experience of being a Teaching Assistant in School of Computing :thinking:","uri":"/posts/ta/ta/"},{"categories":["Academia"],"content":"Experience and Skills I Gain from it By now, you may have the question that given the workload of it, it is even worthy to be a TA and why do I want to be a TA in the first place? My answer is definite! Yes! 😆 I have gained my invaluable experiences thoughout the whole process! Reinforce my Understanding of Fundamental CS Concept: When being the Teaching Assistant year, I found that my understanding of many concepts last year was not adequate. For concept like continuation passing style, memoized streams, and Meta-Circular Evaluator. Although I managed to do many of the questions correctly in the exam, I did not genuinely know what is going on. This year, I have to anticipate the weird questions that student might ask me, which server a motivation for me study those fundamentals in a even deper level. Sharpen My Ability to Speak in Public: As a non-native English speaker, I was always not that confident about my speakon English. This opportunity of being Teaching Assistant gives me a chance to regularly speak in public every week. I did feel that when it came to the end of the semester, speaking English becomes more and more natural to me 😇 Greatly Boost My Confidence: The responsibility of being a tutor to a small group of people is a duty but also a great acknowledgement of my ability and all the efforst that I made throughout the year. When I went for the interview of the application of a student tutor in Raffles Baording School, I felt much confident when elaborating my stregths to the teachers. (btw, luckily, I also manage to get the offer for that job 😉) ","date":"2022-11-14","objectID":"/posts/ta/ta/:0:4","tags":["computer science"],"title":"My Experience of being a Teaching Assistant in School of Computing :thinking:","uri":"/posts/ta/ta/"},{"categories":["Academia"],"content":"And, Of Course, The Payment 😋 The payment consist of two parts: contact hours and non-contact hours both $40 per hour. Every week, I would have 2 contact hours and 2 non-contact hours and of course, you can get additional hours for invigilating exams and facilitating forum hours etc. The payment is not too much but also not too little; it can roughly cover my accomadation fee in Prince George’s Park Residence. 😌 Relatively High Workload\rThe payment in SOC is pretty standard, $40 per hour, across different modules. I have compared with my friends, who are Teaching Assistant for other modules, and found that CS1101s TA do have relatively higher workload than other. Therefore, it may not be a wise choice to be CS1101S TA, if you are coming for the money alone 😳\r","date":"2022-11-14","objectID":"/posts/ta/ta/:0:5","tags":["computer science"],"title":"My Experience of being a Teaching Assistant in School of Computing :thinking:","uri":"/posts/ta/ta/"},{"categories":["Academia"],"content":"A surprising place to use Zobrist Hashing, which is designed for board games","date":"2022-10-17","objectID":"/posts/zobrist/zobrist/","tags":["computer science","curriculum"],"title":"Unexpected Use of Zobrist Hashing :eyes:","uri":"/posts/zobrist/zobrist/"},{"categories":["Academia"],"content":"This post is kind of a following up to the previous post. I found a surprising question where Zobrist hashing is applicable. Alert: this post is going to be a bit technical! This post is kind of a following up to the previous post. In the previous post, I wrote about the AI agent I constructed for the CS2109S individual project to play the board game, Breakthrough. There is, however, one feature I didn’t manage to implement, Zobrist Hashing, which supposedly can dramatically reduce the runtime and space complexity. I have read about the Zobrist Hashing Algorithm but decided to not actually implement it due to lack of time. Instead, I just used a very naive approach: represent the board using a string and directly hash the string representation of the board, which runs in O(n^2) as we have to go through the n * n every time to figure out its string representation. What is Zobrist Hashing?\rZobrist hashing (also referred to as Zobrist keys or Zobrist signatures) is a hash function construction used in computer programs that play abstract board games, such as chess and Go, to implement transposition tables, a special kind of hash table that is indexed by a board position and used to avoid analyzing the same position more than once.\r","date":"2022-10-17","objectID":"/posts/zobrist/zobrist/:0:0","tags":["computer science","curriculum"],"title":"Unexpected Use of Zobrist Hashing :eyes:","uri":"/posts/zobrist/zobrist/"},{"categories":["Academia"],"content":"My Initial stereotype about Zobrist Hashing Upon reading Zobrist Hashing, I initially thought that this hashing algorithm is only dedicated to hashing for board games. I did not see how it could be used elsewhere as it seems to be so specifically designed for hashing board games. ","date":"2022-10-17","objectID":"/posts/zobrist/zobrist/:0:1","tags":["computer science","curriculum"],"title":"Unexpected Use of Zobrist Hashing :eyes:","uri":"/posts/zobrist/zobrist/"},{"categories":["Academia"],"content":"A New Quest Several weeks later, the professor from another module that I concurrently took, CS3230 Design and Analysis of Algorithm, released a programming assignment. Here is the question of the assignment. Given an integer array of size n, find the number of balanced subarrays and output the number. An array is defined to be balanced if all the numbers in that array occur an even number of times (zero times included). For example, if the given array is [1, 1, 2, 3, 3, 2], the output should be 2 as we have subarray [1, 1] and [1, 1, 2, 3, 3, 2] being balanced. The algorithm should run in O(n^2) time complexity. ","date":"2022-10-17","objectID":"/posts/zobrist/zobrist/:0:2","tags":["computer science","curriculum"],"title":"Unexpected Use of Zobrist Hashing :eyes:","uri":"/posts/zobrist/zobrist/"},{"categories":["Academia"],"content":"The Solution 1.0 It didn’t take me long to figure out a naive version of the solution. We can represent the whole configuration using a very long bit string, as long as the maximum number of the given array and set the bit string to be all zeros. Let the ith bit of the bit string represents the parity of number i in the array, 0 for even parity and 1 for odd parity. Every time we encounter a number, we just toggle the corresponding bit in the bit string to indicate a flip in parity. After changing the bit string for each number, we hash the current bit string and record the number for each bit representation. We can easily see that if we have two exactly the same bit strings, then the subarray in between them should be balanced. Therefore, after we loop through the whole array and get the number for each bit string, we simply have to find the summation of each count choose two. This is because by the argument before, we notice that for each pair of the same bit string the subarray between them is always balanced. Therefore, if we will find the total number of balanced subarrays, we need to calculate the number of distinct pairs for each bitstring and sum them up. ","date":"2022-10-17","objectID":"/posts/zobrist/zobrist/:0:3","tags":["computer science","curriculum"],"title":"Unexpected Use of Zobrist Hashing :eyes:","uri":"/posts/zobrist/zobrist/"},{"categories":["Academia"],"content":"The Problem Seems to be pretty elegant, right? However, the problem is that the number in the given array can be extremely large, say 50,000. If we store the bitstring representation in the form of a series of long-type numbers, it means 391 long-type numbers are needed to store the representation! Since each long can represent 128 bits. Therefore, the space and time needed to hash all these values are going to be tremendous. Therefore, we need to figure out an even smarter solution. ","date":"2022-10-17","objectID":"/posts/zobrist/zobrist/:0:4","tags":["computer science","curriculum"],"title":"Unexpected Use of Zobrist Hashing :eyes:","uri":"/posts/zobrist/zobrist/"},{"categories":["Academia"],"content":"The Solution 2.0 As I only did the AI project one or two weeks ago, when sat down and reconsider the problem, I thought, “Wait a minute, isn’t this question a little bit similar to a board game”. The essence of Zobrist Hashing is that in a board game, the board representation only changes minimally for every step, namely the move of a pawn. Therefore, we use the exclusive OR operation on the hash value of the previous step once to indicate the change to avoid repeated computation. The current problem shows much resemblance to the situation described above. When we loop through one element in the array, we only flip one bit of the bitstring, which is similar to the movement of a single pawn. Also, we don’t care about the order or sequence of each bitstring representation; we only care about their counts. After I thought all these through, I then convinced myself that maybe Zobrist Hashing can actually be used in some other situations. ","date":"2022-10-17","objectID":"/posts/zobrist/zobrist/:0:5","tags":["computer science","curriculum"],"title":"Unexpected Use of Zobrist Hashing :eyes:","uri":"/posts/zobrist/zobrist/"},{"categories":["Academia"],"content":"The Implementation Instead of using a 391 longs combination as the representation. This time I long use a single long as the representation. We randomly initialize it first to avoid collision then find the largest element in the array and assign each number to a random long. The algorithm is rather straightforward, we simply loop through the array. When we encounter a number, we XOR it with our long representation and then hash the long representation, which is almost the same as the original version of Zobrist Hashing. ","date":"2022-10-17","objectID":"/posts/zobrist/zobrist/:0:6","tags":["computer science","curriculum"],"title":"Unexpected Use of Zobrist Hashing :eyes:","uri":"/posts/zobrist/zobrist/"},{"categories":["Academia"],"content":"The Improvement The improvement is unbelievable; the naive solution needs more than 20 seconds to solve an input of scale 50,000 while the Zobrist version only uses less than 3 seconds !!! I was wondering if I did not do the AI project several weeks ago, how would I even be able to link this problem with Zobrist hashing and come up with this elegant solution? It just struck me how amazing and flexible algorithms can be when it comes to problem-solving. ","date":"2022-10-17","objectID":"/posts/zobrist/zobrist/:0:7","tags":["computer science","curriculum"],"title":"Unexpected Use of Zobrist Hashing :eyes:","uri":"/posts/zobrist/zobrist/"},{"categories":["Academia"],"content":"To Be Continued … Lastly, after studying CS3230, I do wish to formally prove the runtime and the correctness of the algorithm but this post is already running a bit too long and too technical. Maybe, I will come back sometime and write a new post with the proof in the future! ","date":"2022-10-17","objectID":"/posts/zobrist/zobrist/:0:8","tags":["computer science","curriculum"],"title":"Unexpected Use of Zobrist Hashing :eyes:","uri":"/posts/zobrist/zobrist/"},{"categories":["Fitness"],"content":"Some major Mistakes that I have made along the journey of muscle bulding","date":"2022-09-22","objectID":"/posts/detour/detour/","tags":["kinesiology","nutriology"],"title":"Detours I Have Taken When Trying to Build Muscle :worried:","uri":"/posts/detour/detour/"},{"categories":["Fitness"],"content":"Some major mistakes that I have made when trying to build muscle for the pass few year. I want to note them down here so as to remind myself not to make them again. Hopefully, the lessos I learnt can also help others who are facing similar situations. note\rI will try to keep update this post as I am still newbie and have very much to learn along the process. 😉\r","date":"2022-09-22","objectID":"/posts/detour/detour/:0:0","tags":["kinesiology","nutriology"],"title":"Detours I Have Taken When Trying to Build Muscle :worried:","uri":"/posts/detour/detour/"},{"categories":["Fitness"],"content":"Why I Start Working Out and Bulking I am typical ectomorphy; before I started working out since 2019, though I am 1.91m tall, I barely weigh 72Kg and looks extremely thin. I love play basketball. However, being so thin and weak in the past, I was always ‘bullied’ by the stronger players. Therefore, I decide to start working out to build more muscle and boost my strength ","date":"2022-09-22","objectID":"/posts/detour/detour/:0:1","tags":["kinesiology","nutriology"],"title":"Detours I Have Taken When Trying to Build Muscle :worried:","uri":"/posts/detour/detour/"},{"categories":["Fitness"],"content":"Not Resting Enough When I first started working out, I was extremely, or even excessively passionate about training. At that period, I trained six or even seven times a week! However, such frequency means that my body simply do not have enough time to rest and recover. Too much passion may backfire. 😭 ","date":"2022-09-22","objectID":"/posts/detour/detour/:0:2","tags":["kinesiology","nutriology"],"title":"Detours I Have Taken When Trying to Build Muscle :worried:","uri":"/posts/detour/detour/"},{"categories":["Fitness"],"content":"Not Eating Enough Protein and Calories In terms of diet, at first, I focus too much on eating ‘cleanly’ instead of the amount of protein and calories I take every. AS an ectomorphy trying to bulk, the first priority of mine should have been creating a sufficient calories surplus and protein (one gram of protein per KG of body weight) to maximize muscle growth. ","date":"2022-09-22","objectID":"/posts/detour/detour/:0:3","tags":["kinesiology","nutriology"],"title":"Detours I Have Taken When Trying to Build Muscle :worried:","uri":"/posts/detour/detour/"},{"categories":["Fitness"],"content":"Some Youtube and Bilibili Channels that I Recommand Greg Doucette: https://www.youtube.com/@gregdoucette Bruce_Phd: https://space.bilibili.com/1387592680/ ","date":"2022-09-22","objectID":"/posts/detour/detour/:0:4","tags":["kinesiology","nutriology"],"title":"Detours I Have Taken When Trying to Build Muscle :worried:","uri":"/posts/detour/detour/"},{"categories":["Academia"],"content":"Nothing Much, just a short post to remember the day when I manage to bench 90KG for reps :muscle:","date":"2022-09-11","objectID":"/posts/minimax/minimax/","tags":["computer science","algorithm","AI"],"title":"The power of Iterative Deepening Minimax search with Alpha Beta Pruning :boom:","uri":"/posts/minimax/minimax/"},{"categories":["Academia"],"content":"I did a mini project when taking CS2109s (Introduction to AI and ML), where I built an AI agent for a simple board game, Breakthrough, with iterative deepening minimax search algorithm. What it can achieve blew my mind! ","date":"2022-09-11","objectID":"/posts/minimax/minimax/:0:0","tags":["computer science","algorithm","AI"],"title":"The power of Iterative Deepening Minimax search with Alpha Beta Pruning :boom:","uri":"/posts/minimax/minimax/"},{"categories":["Academia"],"content":"The Board Game Breakthrough!! breakthrough (image)\rBreakthrough\rBreakthrough is an abstract strategy board game invented by Dan Troyka in 2000 and made available as a Zillions of Games file (ZRF). It won the 2001 8x8 Game Design Competition, even though the game was originally played on a 7x7 board, as it is trivially extensible to larger board sizes. – from WikiPedia\rRules and Winning condition of the game each play moving one piece per turn. a pawn may move one pace straight or diagonally forward. a piece can move into a square containing opponent’s pawn and capture it, if the square is diaganoally forward winning condition 1: The first player to reacht the opponent’s home row winning condition 2: the other player has no more pawns. ","date":"2022-09-11","objectID":"/posts/minimax/minimax/:0:1","tags":["computer science","algorithm","AI"],"title":"The power of Iterative Deepening Minimax search with Alpha Beta Pruning :boom:","uri":"/posts/minimax/minimax/"},{"categories":["Academia"],"content":"Pseudo Code of My Algorithm class PlayerAI: def evaluate_state(self, board): # generate all possible moves for black in a priority queue such that # the top element is the one with the largest evaluation score def possible_moves(self, board): moves = PriorityQueue() return moves # represent a board as a string for smaller storage and faste comparison def stringify_board(self, board): res = \"\" for i in range(6): for j in range(6): res += board[i][j] return res def make_move(self, board): # minimax searching function that returns the best move found in a given number of steps start_time = time.time() end_time = start_time + 2.90 depth = 0 current_best_score = -math.inf current_best_move = None def minimax(board, depth, is_black, alpha, beta, visited): if is_game_over or depth == 0: return evaluate_state(board), None best_move = None best_score = -math.inf moves = self.possible_moves(board) while not moves.empty(): current_move = moves.get()[1] if time.time() \u003e end_time: break # use memoization to keep track of the board being evaluated if new_repr not in visited: current_score = -minimax(invert_board, depth - 1, not(is_black), alpha, beta, visited)[0] if current_score \u003e best_score: best_score = current_score best_move = current_move if is_black: alpha = max(best_score, alpha) else: beta = min(-best_score, beta) if alpha \u003e= beta: break return best_score, best_move # implement iterative deepening minimax search while time.time() \u003c end_time: current_search = minimax(board, depth, True, -math.inf, math.inf, {}) if current_search[0] \u003e current_best_score: current_best_score = current_search[0] current_best_move = current_search[1] depth = depth + 1 return current_best_move ","date":"2022-09-11","objectID":"/posts/minimax/minimax/:0:2","tags":["computer science","algorithm","AI"],"title":"The power of Iterative Deepening Minimax search with Alpha Beta Pruning :boom:","uri":"/posts/minimax/minimax/"},{"categories":["Academia"],"content":"The General Approah I took The overall algorithm is based on the minimax search algorithm with alpha-beta pruning. We will use a heuristic function, which shall be discussed in the latter section, to evaluate the desirability of each state of the board from the point of view of the black player. (i.e, the larger the score of a particular board, the more desirable the board is for the black player.) When it is the White player’s turn to move, we invert the board to find the most desirable move for the White player and return the most negative score of that board since the score of the board is from the perspective of the black player. The algorithm also incorporates alpha-beta pruning where alpha only updates for the black player and beta is only updated for the white player to reduce the number of boards expand, thus increasing the level searched ","date":"2022-09-11","objectID":"/posts/minimax/minimax/:0:3","tags":["computer science","algorithm","AI"],"title":"The power of Iterative Deepening Minimax search with Alpha Beta Pruning :boom:","uri":"/posts/minimax/minimax/"},{"categories":["Academia"],"content":"Some Constraints Given by the questions Since the question states a time constraint of making each move within actual 3 seconds, regardless of the machine where the algorithm runs. It is therefore suitable to enhance the algorithm with iterative deepening, where the depth of the minimax search increases gradually within the given time. To achieve this, we first find the time before the algorithm’s execution and calculate the end time to be incremented by 2.90. Second, when entering each iteration, namely when evaluating each possible next step, we compare the current time with the supposed end time. If it exceeds 2.90 seconds, we return the best move we have found so far. The 0.1 second left allows the algorithm to finish executing the remaining instructions. The 2.90 seconds limit works fine both on my laptop and desktop. ","date":"2022-09-11","objectID":"/posts/minimax/minimax/:0:4","tags":["computer science","algorithm","AI"],"title":"The power of Iterative Deepening Minimax search with Alpha Beta Pruning :boom:","uri":"/posts/minimax/minimax/"},{"categories":["Academia"],"content":"Some Additional Features that I Included to Further Improve the performance to increase the pruning for the alpha-beta algorithm, moving ordering is also adopted. The possible moves of a certain board are stored in a priority queue sorted according to each board’s score in descending order. This means that the most promising move will be evaluated first, and pruning is more likely to happen. Memoization is used in the evaluate_board function to further speed up the algorithm by storing the score of each board as a dictionary in the class PlayerAI(). This avoids calling the evaluate_board function repeatedly on the same board at the base cases. Such an approach is viable as the number of the possible state of the 8x8 breakthrough game is still relatively small and we are evaluating the board in various places (when generating possible moves, and when evaluating the base case). I also create a stringify_state function to produce a string representation of a board since the original list representation of the board is not hashable. ","date":"2022-09-11","objectID":"/posts/minimax/minimax/:0:5","tags":["computer science","algorithm","AI"],"title":"The power of Iterative Deepening Minimax search with Alpha Beta Pruning :boom:","uri":"/posts/minimax/minimax/"},{"categories":["Academia"],"content":"The Heuristic Function!!! the heuristic of my evaluation_board function takes several factors into consideration. The most obvious case is that for the winning state, the score should be a large positive number if the black player wins the game and a large negative number otherwise. Also, if the white pawns are in the second last row, meaning that we are almost losing, such a state should be penalized significantly. There four following basic factors are considered: The piece score in the evaluation function stores the amount by which the number of black pawns exceeds the number of white pawns. The position score in the evaluation function stores the amount by which the sum of distances of each black pawn from its baseline exceeds that of white pawns. The offensive score in the evaluation function stores the farthest distance from the one black pawn to the baseline. The defensive score in the evaluation function stores the closest distance from the one white pawn to the black pawn’s baseline. The larger the more desirable for all four factors. However, unfortunately, the weightage of each factor is determined empirically. I have created several test players which only consider one of the aforementioned factors to play against each other. After much testing, I decided to assign more weightage to the defensive score as the defensive player performs the best among all the test players while assigning a much low weight for the offensive score as it renders the player more prone to move forward recklessly. A comprehensive player is also designed to consider all four above basic stats for further testing. The source code for all five players is attached below in the document. Moreover, after actually playing the game myself, I have discovered various non-obvious features of the board that we may what to ponder in our evaluation function: The danger penalty in the evaluation function stores the number of white pawns that can attack our black pawns. (i.e., which can be captured by white pawns in the next turn). In addition, the protected bonus calculates whether an endangered black pawn is being protected by other black pawns, meaning that if the white pawns actually attack our black pawn, the protecting black pawn can attack the white pawn in revenge. The weight for the protected bonus is designed to the higher than the danger penalty. Therefore, if the pawn is endangered without being protected, we will penalize it heavily as we will lose the pawn without being able to revenge. On the other hand, if the pawn is actually endangered but protected at the same time, we will rather reward the state. With such a strategy, we can lure the opponent to eat our pawn such that we can immediately counterattack. This is especially effective when playing against players that prioritize attacking. The other feature that came to my attention is when there are empty columns. I found that if we have columns without black pawns, it becomes more difficult to defend in terms of blocking the opponent on the column and attacking the opponent on the neighbouring column. Therefore, I have created this empty column penalty, to penalize boards with empty columns. Furthermore, a more precarious situation is when there is a column with a white pawn but not a black pawn. We will double penalize that case. ","date":"2022-09-11","objectID":"/posts/minimax/minimax/:0:6","tags":["computer science","algorithm","AI"],"title":"The power of Iterative Deepening Minimax search with Alpha Beta Pruning :boom:","uri":"/posts/minimax/minimax/"},{"categories":["Academia"],"content":"The Testing After the implementation of the aforemented algorithm, which is able to search for around 5 levels on my machine within 3 seconds. I have also created a few other more naive players that only searches for 3 levels to test out my agent. Here are the heuristic functions I used to the naive player. # compare the number of pieces def piece_evaluation(board): number_of_pieces = 0 for i in range(6): for j in range(6): if(board[i][j] == 'B'): number_of_pieces += 1 if(board[i][j] == 'W'): number_of_pieces -= 1 return number_of_pieces # compare the number of possible moves def mobility_evaluation(board): invert_state = copy.deepcopy(board) utils.invert_board(invert_state) return len(possible_moves(board)) - len(possible_moves(invert_state)) # compare the total number of distance from the base line def greedy_evaluation(board): total_position_score = 0 for i in range(6): for j in range(6): if(board[i][j] == 'B'): total_position_score += i elif(board[i][j] == 'W' and i ): total_position_score -= (5 - i) return total_position_score def reckless_evaluation(board): score = 0 for i in range(6): for j in range(6): if board[i][j] == \"B\": score = max(score, i) return score def defensive_evaluation(board): score = 6 for i in range(6): for j in range(6): if board[i][j] == \"W\": score = min(score, i) return score My AI agent is able to defeat all of them around 20 steps, it really surprised me that minimax search can be so powerful if we are able to search for several more layers ","date":"2022-09-11","objectID":"/posts/minimax/minimax/:0:7","tags":["computer science","algorithm","AI"],"title":"The power of Iterative Deepening Minimax search with Alpha Beta Pruning :boom:","uri":"/posts/minimax/minimax/"},{"categories":["Academia"],"content":"Some Features that I Didn’t have Time to Implement Zobrist Hashing ","date":"2022-09-11","objectID":"/posts/minimax/minimax/:0:8","tags":["computer science","algorithm","AI"],"title":"The power of Iterative Deepening Minimax search with Alpha Beta Pruning :boom:","uri":"/posts/minimax/minimax/"},{"categories":["Academia"],"content":"Referenece https://www.codeproject.com/Articles/37024/Simple-AI-for-the-Game-of-Breakthrough. I have gained much high-level inspiration from this article, especially for my evaluation function but I have implemented all the algorithms on my own. 😉 ","date":"2022-09-11","objectID":"/posts/minimax/minimax/:0:9","tags":["computer science","algorithm","AI"],"title":"The power of Iterative Deepening Minimax search with Alpha Beta Pruning :boom:","uri":"/posts/minimax/minimax/"},{"categories":["Fitness"],"content":"Nothing Much, just a short post to remember the day when I manage to bench 90KG for reps :muscle:","date":"2022-06-05","objectID":"/posts/benching90/benching90/","tags":["training record"],"title":"First Time Benching 90KG for 6 reps :muscle:","uri":"/posts/benching90/benching90/"},{"categories":["Fitness"],"content":"Nothing too much about this post, just a short post to celebreate and remember the day when I manage to bench 90KG for reps 💪 ","date":"2022-06-05","objectID":"/posts/benching90/benching90/:0:0","tags":["training record"],"title":"First Time Benching 90KG for 6 reps :muscle:","uri":"/posts/benching90/benching90/"},{"categories":["Fitness"],"content":"Sad Backgroud Story Due of the pandemic, circuit breaker, and all kinds of the restrictions on gym usage, I was not able training in a gym properly on a regular basis for the last one and a half years. 😭 I was barely able to maintain my strength for that period and my bench press performance was stuck at 80KG for 3 reps for more than year, drifting me away from my goal of pressing 100KG for reps one day. ","date":"2022-06-05","objectID":"/posts/benching90/benching90/:0:1","tags":["training record"],"title":"First Time Benching 90KG for 6 reps :muscle:","uri":"/posts/benching90/benching90/"},{"categories":["Fitness"],"content":"Breakthrough of My BottleNeck This year, with the alleviation of gym usage restrictions, I was finally able to train regularly as I used to. Although my body fat rate indeed somewhat increased (currently around 16%), my strength also improved tremendously. Today, I surprisingly managed to bench 90KG for 6 reps. Hopefully, my goal of benching 100KG some day is always around the corner! 😎 ","date":"2022-06-05","objectID":"/posts/benching90/benching90/:0:2","tags":["training record"],"title":"First Time Benching 90KG for 6 reps :muscle:","uri":"/posts/benching90/benching90/"},{"categories":["Academia"],"content":"How did I manage to be accepted by NUS Computer Science and received the Science and Technology Scolarship :sunglasses:","date":"2022-02-26","objectID":"/posts/matriculation/nuscs/","tags":["computer science","scholarship"],"title":"My Experience of Matriculation to NUS Computer Science :sunglasses:","uri":"/posts/matriculation/nuscs/"},{"categories":["Academia"],"content":"Check out this post to find out how did I get accept by NUS CS and receive the S\u0026T Merit Scholarship. This post may be expecially applicable for international students study in Singapore. ","date":"2022-02-26","objectID":"/posts/matriculation/nuscs/:0:0","tags":["computer science","scholarship"],"title":"My Experience of Matriculation to NUS Computer Science :sunglasses:","uri":"/posts/matriculation/nuscs/"},{"categories":["Academia"],"content":"My Background I am from China and I came to Singapore to study some 6 years ago under a government scholarship, MOE school-based scholarship (SM1 Scholarship), when I finished my secondary school in China. My secondary school is Xinmin Secondary School and my JC is Eunoia Junior College. Unique Context Alert\rAs far as I know, NUS might treat people from different background (Singaporeans, PRs, or International Students) quite different. Given my unique background, the information of this post may not be applicable to everyone but can be used as a reference\r","date":"2022-02-26","objectID":"/posts/matriculation/nuscs/:0:1","tags":["computer science","scholarship"],"title":"My Experience of Matriculation to NUS Computer Science :sunglasses:","uri":"/posts/matriculation/nuscs/"},{"categories":["Academia"],"content":"My A Level Result Rank Point: 88.75 H1 General Paper A H2 Mathematics A H2 Further Mathematics A H2 Physics A H2 China Studies in Chinese A H1 Project Work B H3 Mathmatics Merit As shown by the official cutoff point of NUS Computer Science (AAA/A for 10th percentile and AAA/A for percentile), achieven 3 A for H2 subject and 1 A for H1 subject is a must to have. I have heard from my friend that she got acceptted to CS with 87.5 rank point with a C in General Paper.Therefore, don’t worry too much if you are not so good at General Paper or have gotten a B for Project like me. 😏 ","date":"2022-02-26","objectID":"/posts/matriculation/nuscs/:0:2","tags":["computer science","scholarship"],"title":"My Experience of Matriculation to NUS Computer Science :sunglasses:","uri":"/posts/matriculation/nuscs/"},{"categories":["Academia"],"content":"About My Scholarship I received my offer to NUS CS around March 2021 and received the offer to Science and Technology Scholarship some two weeks later. I did not went through any interview nor fill any additional application form. Common Questions Here are some questions that I am confused about when I tried to apply last year Do I need Leadership Experience to get S\u0026T Scholarship? Not really, I did have much leadership position in JC other than subject reps. Will there be a interview for the Scholarship? As far as I know and the information I obtained from my senoirs, for people with 87.5 rank point and higher, NUS would offer S\u0026T scholarship without interview, while for peopel with rank point between 85 and 87.5, there will be an interview arranged. ","date":"2022-02-26","objectID":"/posts/matriculation/nuscs/:0:3","tags":["computer science","scholarship"],"title":"My Experience of Matriculation to NUS Computer Science :sunglasses:","uri":"/posts/matriculation/nuscs/"},{"categories":["Academia"],"content":"All the modules that I have taken over the years","date":"2022-01-15","objectID":"/posts/nusmodules/nusmodules/","tags":["computer science","curriculum"],"title":"Modules that I have taken for each semester in NUS :eyes:","uri":"/posts/nusmodules/nusmodules/"},{"categories":["Academia"],"content":"This is not a very formal post, just keeping track of all the modules that I have taken across the years. * means ...\rCS degree requirement, i.e., compulsory module to take\r** means ...\rCS degree requirement but can take other equivalent module to fulfil the same aspect of requirement\r","date":"2022-01-15","objectID":"/posts/nusmodules/nusmodules/:0:0","tags":["computer science","curriculum"],"title":"Modules that I have taken for each semester in NUS :eyes:","uri":"/posts/nusmodules/nusmodules/"},{"categories":["Academia"],"content":"Year 1 Sem 1 CS1101s Programming Methodology I * CS1231s Discrete Structure * MA1521 Calculus for Computing * MA2001 Linear Algebra I * IS1103 Ethics in Computing * CFG1002 Career Catalyst ","date":"2022-01-15","objectID":"/posts/nusmodules/nusmodules/:0:1","tags":["computer science","curriculum"],"title":"Modules that I have taken for each semester in NUS :eyes:","uri":"/posts/nusmodules/nusmodules/"},{"categories":["Academia"],"content":"Year 1 Sem 2 CS2030s Programming Methodology II * CS2040s Data Structures \u0026 Algorithms * ST2334 Probability and Statistics * PC1432 Physics IIE ** GEA1000 Quantative Reasoning ** GESS1003 Everyday Life of Chinese Singaporean ** GEC1036 Radiation Scientific Understanding ** ","date":"2022-01-15","objectID":"/posts/nusmodules/nusmodules/:0:2","tags":["computer science","curriculum"],"title":"Modules that I have taken for each semester in NUS :eyes:","uri":"/posts/nusmodules/nusmodules/"},{"categories":["Academia"],"content":"Year 2 Sem 1 CS2100 Computer Organization * CS2102 Database Systems CS2109s Introduction to AI and Machine Learning * CS3230 Design and Analysis of Algorithm * ST2137 Statistical Computing and Programming ","date":"2022-01-15","objectID":"/posts/nusmodules/nusmodules/:0:3","tags":["computer science","curriculum"],"title":"Modules that I have taken for each semester in NUS :eyes:","uri":"/posts/nusmodules/nusmodules/"},{"categories":["Academia"],"content":"To Be Continue … 😤","date":"2022-01-15","objectID":"/posts/nusmodules/nusmodules/:0:4","tags":["computer science","curriculum"],"title":"Modules that I have taken for each semester in NUS :eyes:","uri":"/posts/nusmodules/nusmodules/"},{"categories":["Blog"],"content":"Why I want to build this blog website and what I will share here. :wink:","date":"2022-01-13","objectID":"/posts/myfirstpost/myfirstpost/","tags":["blogging"],"title":"My First Post! :wink:","uri":"/posts/myfirstpost/myfirstpost/"},{"categories":["Blog"],"content":"Hello world! Yufan here! Come and find out why I want to start this blog and What I will be sharing here. 😆 ","date":"2022-01-13","objectID":"/posts/myfirstpost/myfirstpost/:0:0","tags":["blogging"],"title":"My First Post! :wink:","uri":"/posts/myfirstpost/myfirstpost/"},{"categories":["Blog"],"content":"Why I Want to Build This Blog Website 🐻 I want to better structure my knowledge and experience in words, so that I can refer to them in the future and also possibly benefit those who are in similar situations. As an non-native English Speaker, I also want to improve my English writing skills. I also want to keep track of my training performance as well as the knowledge about kinesiology and Nutriology here to serve a motivation for myself. ","date":"2022-01-13","objectID":"/posts/myfirstpost/myfirstpost/:0:1","tags":["blogging"],"title":"My First Post! :wink:","uri":"/posts/myfirstpost/myfirstpost/"},{"categories":["Blog"],"content":"What I Will Share 🐱 Computer Science Kinesiology and Nutriology Experience of Staying and Studying in a Foreign Country ","date":"2022-01-13","objectID":"/posts/myfirstpost/myfirstpost/:0:2","tags":["blogging"],"title":"My First Post! :wink:","uri":"/posts/myfirstpost/myfirstpost/"},{"categories":["Blog"],"content":"The Style of My Future Posts 🐭 Mainly Casual Try to be as Informative as possible Note\rAlthough this blog website looks pretty simple and naive at this moment, I will be keep adding new features and content!!! 😉\r","date":"2022-01-13","objectID":"/posts/myfirstpost/myfirstpost/:0:3","tags":["blogging"],"title":"My First Post! :wink:","uri":"/posts/myfirstpost/myfirstpost/"},{"categories":null,"content":"A Personal Blog of Zhu Yufan","date":"2022-12-13","objectID":"/about/","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":"I am currently a Year 2 Computer Science Student in National University of Singapore ","date":"2022-12-13","objectID":"/about/:0:0","tags":null,"title":"About","uri":"/about/"}]